// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`queue(fn) atomic(fn) alternate 1`] = `
Array [
  1,
  2,
  3,
  4,
]
`;

exports[`queue(fn) atomic(fn) makes the function atomic 1`] = `
Array [
  1,
  2,
  3,
  4,
]
`;

exports[`queue(fn) atomic(fn) receives parameters 1`] = `
Array [
  2,
  3,
  4,
  5,
]
`;

exports[`queue(fn) atomic(fn) returns result 1`] = `
Array [
  1,
  2,
  3,
  4,
]
`;

exports[`queue(fn) atomic(fn) run in order 1`] = `
Array [
  1,
  2,
  3,
  4,
  5,
]
`;

exports[`queue(fn) atomic(fn) throwing doesnt destroy queue 1`] = `
Array [
  1,
  2,
]
`;

exports[`queue(fn) atomic(fn) uses this 1`] = `
Array [
  1,
  2,
  3,
  4,
]
`;

exports[`queue(fn) atomic(fn) with timeout 1`] = `
Array [
  1,
  2,
]
`;

exports[`queue(fn) atomic(fn) with timeout 2`] = `
Array [
  Object {
    "status": "fulfilled",
    "value": 1,
  },
  Object {
    "status": "fulfilled",
    "value": 2,
  },
  Object {
    "status": "fulfilled",
    "value": undefined,
  },
  Object {
    "status": "fulfilled",
    "value": undefined,
  },
]
`;

exports[`queue(fn) debounce debounce() = last 1`] = `
Array [
  6,
  6,
  6,
  6,
  6,
]
`;

exports[`queue(fn) debounce first() 1`] = `
Array [
  2,
  2,
  2,
  2,
]
`;

exports[`queue(fn) debounce first.last() 1`] = `
Array [
  2,
  8,
  8,
  8,
  8,
]
`;

exports[`queue(fn) debounce first.last.next() 1`] = `
Array [
  2,
  7,
  7,
  7,
  13,
]
`;

exports[`queue(fn) debounce last.next() simple 1`] = `
Array [
  5,
  5,
  5,
  5,
  11,
]
`;

exports[`queue(fn) debounce last.next() with additional 1`] = `
Array [
  5,
  5,
  5,
  5,
  13,
  13,
  13,
  22,
]
`;

exports[`queue(fn) raf multiple plain 1`] = `
Array [
  1,
  2,
]
`;

exports[`queue(fn) raf multiple with args 1`] = `
Array [
  1,
  4,
]
`;
